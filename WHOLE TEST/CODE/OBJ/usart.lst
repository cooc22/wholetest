C51 COMPILER V9.54   USART                                                                 12/25/2020 17:22:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN ..\OBJ\usart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SYSTEM\usart\usart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(..\OBJ\usart.lst) OBJECT(..\OBJ\usart.obj)

line level    source

   1          #include "sys.h"
*** WARNING C318 IN LINE 1 OF ..\SYSTEM\usart\usart.c: can't open file 'sys.h'
   2          #include "usart.h"        
*** WARNING C318 IN LINE 4 OF ..\SYSTEM\usart\usart.h: can't open file 'sys.h'
*** ERROR C129 IN LINE 32 OF ..\SYSTEM\usart\usart.h: missing ';' before 'USART_RX_BUF'
   3          //////////////////////////////////////////////////////////////////////////////////       
   4          //如果使用ucos,则包括下面的头文件即可.
   5          #if SYSTEM_SUPPORT_OS
*** WARNING C322 IN LINE 5 OF ..\SYSTEM\usart\usart.c: unknown identifier
              #include "includes.h"                                   //ucos 使用       
              #endif
   8          //////////////////////////////////////////////////////////////////////////////////       
   9          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
  10          //ALIENTEK STM32开发板
  11          //串口1初始化              
  12          //正点原子@ALIENTEK
  13          //技术论坛:www.openedv.com
  14          //修改日期:2012/8/18
  15          //版本：V1.5
  16          //版权所有，盗版必究。
  17          //Copyright(C) 广州市星翼电子科技有限公司 2009-2019
  18          //All rights reserved
  19          //********************************************************************************
  20          //V1.3修改说明 
  21          //支持适应不同频率下的串口波特率设置.
  22          //加入了对printf的支持
  23          //增加了串口接收命令功能.
  24          //修正了printf第一个字符丢失的bug
  25          //V1.4修改说明
  26          //1,修改串口初始化IO的bug
  27          //2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
  28          //3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
  29          //4,修改了EN_USART1_RX的使能方式
  30          //V1.5修改说明
  31          //1,增加了对UCOSII的支持
  32          //////////////////////////////////////////////////////////////////////////////////        
  33           
  34          
  35          //////////////////////////////////////////////////////////////////
  36          //加入以下代码,支持printf函数,而不需要选择use MicroLIB    
  37          #if 1
  38          #pragma import(__use_no_semihosting)             
  39          //标准库需要的支持函数                 
  40          struct __FILE 
  41          { 
  42                  int handle; 
  43          
  44          }; 
  45          
  46          FILE __stdout;       
  47          //定义_sys_exit()以避免使用半主机模式    
  48          _sys_exit(int x) 
  49          { 
  50                  x = x; 
C51 COMPILER V9.54   USART                                                                 12/25/2020 17:22:05 PAGE 2   

  51          } 
  52          //重定义fputc函数 
  53          int fputc(int ch, FILE *f)
  54          {      
  55                  while((USART1->SR&0X40)==0);//循环发送,直到发送完毕   
  56              USART1->DR = (u8) ch;      
  57                  return ch;
  58          }
  59          #endif 
  60          
  61          /*使用microLib的方法*/
  62           /* 
  63          int fputc(int ch, FILE *f)
  64          {
  65                  USART_SendData(USART1, (uint8_t) ch);
  66          
  67                  while (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET) {}  
  68             
  69              return ch;
  70          }
  71          int GetKey (void)  { 
  72          
  73              while (!(USART1->SR & USART_FLAG_RXNE));
  74          
  75              return ((int)(USART1->DR & 0x1FF));
  76          }
  77          */
  78           
  79          #if EN_USART1_RX   //如果使能了接收
  80          //串口1中断服务程序
  81          //注意,读取USARTx->SR能避免莫名其妙的错误       
  82          u8 USART_RX_BUF[USART_REC_LEN];     //接收缓冲,最大USART_REC_LEN个字节.
  83          //接收状态
  84          //bit15，       接收完成标志
  85          //bit14，       接收到0x0d
  86          //bit13~0，     接收到的有效字节数目
  87          u16 USART_RX_STA=0;       //接收状态标记          
  88            
  89          void uart_init(u32 bound){
  90            //GPIO端口设置
  91            GPIO_InitTypeDef GPIO_InitStructure;
  92                  USART_InitTypeDef USART_InitStructure;
  93                  NVIC_InitTypeDef NVIC_InitStructure;
  94                   
  95                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1|RCC_APB2Periph_GPIOA, ENABLE);     //使能USART1，GPIOA时钟
  96            
  97                  //USART1_TX   GPIOA.9
  98            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; //PA.9
  99            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 100            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;       //复用推挽输出
 101            GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.9
 102             
 103            //USART1_RX     GPIOA.10初始化
 104            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//PA10
 105            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;//浮空输入
 106            GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.10  
 107          
 108            //Usart1 NVIC 配置
 109            NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 110                  NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3 ;//抢占优先级3
 111                  NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;              //子优先级3
 112                  NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                 //IRQ通道使能
C51 COMPILER V9.54   USART                                                                 12/25/2020 17:22:05 PAGE 3   

 113                  NVIC_Init(&NVIC_InitStructure); //根据指定的参数初始化VIC寄存器
 114            
 115             //USART 初始化设置
 116          
 117                  USART_InitStructure.USART_BaudRate = bound;//串口波特率
 118                  USART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为8位数据格式
 119                  USART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位
 120                  USART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位
 121                  USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;//无硬件数据流控制
 122                  USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx; //收发模式
 123          
 124            USART_Init(USART1, &USART_InitStructure); //初始化串口1
 125            USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//开启串口接受中断
 126            USART_Cmd(USART1, ENABLE);                    //使能串口1 
 127          
 128          }
 129          
 130          void USART1_IRQHandler(void)                    //串口1中断服务程序
 131                  {
 132                  u8 Res;
 133          #if SYSTEM_SUPPORT_OS           //如果SYSTEM_SUPPORT_OS为真，则需要支持OS.
*** WARNING C322 IN LINE 133 OF ..\SYSTEM\usart\usart.c: unknown identifier
                      OSIntEnter();    
              #endif
 136                  if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)  //接收中断(接收到的数据必须是0x0d 0x0a结尾)
 137                          {
 138                          Res =USART_ReceiveData(USART1); //读取接收到的数据
 139                          
 140                          if((USART_RX_STA&0x8000)==0)//接收未完成
 141                                  {
 142                                  if(USART_RX_STA&0x4000)//接收到了0x0d
 143                                          {
 144                                          if(Res!=0x0a)USART_RX_STA=0;//接收错误,重新开始
 145                                          else USART_RX_STA|=0x8000;      //接收完成了 
 146                                          }
 147                                  else //还没收到0X0D
 148                                          {       
 149                                          if(Res==0x0d)USART_RX_STA|=0x4000;
 150                                          else
 151                                                  {
 152                                                  USART_RX_BUF[USART_RX_STA&0X3FFF]=Res ;
 153                                                  USART_RX_STA++;
 154                                                  if(USART_RX_STA>(USART_REC_LEN-1))USART_RX_STA=0;//接收数据错误,重新开始接收      
 155                                                  }                
 156                                          }
 157                                  }                
 158               } 
 159          #if SYSTEM_SUPPORT_OS   //如果SYSTEM_SUPPORT_OS为真，则需要支持OS.
*** WARNING C322 IN LINE 159 OF ..\SYSTEM\usart\usart.c: unknown identifier
                      OSIntExit();                                                                                     
              #endif
 162          } 
 163          #endif  
 164          

C51 COMPILATION COMPLETE.  5 WARNING(S),  1 ERROR(S)
